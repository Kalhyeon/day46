1. 소프트웨어의 위기 : 소프트웨어의 개발이 지연된다.
   모든 개발 방법의 목표는 생산성을 높이자는 것
   => 비용 절감
   
2. 생산성을 높이는 방법
   - 코드 개발보다 유지 보수에 더 많은 비용이 들어간다.
   - 한 번 작성한 코드를 재사용한다면 생산성을 더 높일 수 있을 것이다.
   - 그래서 나오게 된 것 => 소프트웨어의 부품을 만들자 => 객체
     => 클래스

3. 객체 지향 기법
   - 캡슐화 : 관련된 데이터와 기능을 잘 모아 클래스를 만든다.
   - 정보 은닉 : 가급적 private 로 만들어 클래스 내부를 보호한다.
   - 상속 : 자식이 부모의 멤버를 상속하여 재사용한다.
   - 다형성 : 상황에 따라 객체의 동작을 적절히 조절한다 => 오버로딩/오버라이딩

4. 상속의 의미 변경 : zexample2 의 예제들